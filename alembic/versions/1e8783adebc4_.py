"""empty message

Revision ID: 1e8783adebc4
Revises: 
Create Date: 2018-05-28 11:17:24.722682

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1e8783adebc4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('concepts',
    sa.Column('concept_id', sa.BigInteger(), nullable=False),
    sa.Column('ui', sa.Unicode(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.Column('casn1_name', sa.Unicode(), nullable=True),
    sa.Column('registry_number', sa.Unicode(), nullable=True),
    sa.Column('scope_note', sa.UnicodeText(), nullable=True),
    sa.Column('translators_english_scope_note', sa.UnicodeText(), nullable=True),
    sa.Column('translators_scope_note', sa.UnicodeText(), nullable=True),
    sa.PrimaryKeyConstraint('concept_id', name=op.f('pk_concepts')),
    sa.UniqueConstraint('ui', name=op.f('uq_concepts_ui')),
    schema='mesh'
    )
    op.create_index(op.f('ix_mesh_concepts_registry_number'), 'concepts', ['registry_number'], unique=False, schema='mesh')
    op.create_table('descriptors',
    sa.Column('descriptor_id', sa.BigInteger(), nullable=False),
    sa.Column('class', sa.Enum('ONE', 'TWO', 'THREE', 'FOUR', name='descriptorclasstype'), nullable=False),
    sa.Column('ui', sa.Unicode(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.Column('created', sa.Date(), nullable=False),
    sa.Column('revised', sa.Date(), nullable=True),
    sa.Column('established', sa.Date(), nullable=True),
    sa.Column('annotation', sa.UnicodeText(), nullable=True),
    sa.Column('history_note', sa.UnicodeText(), nullable=True),
    sa.Column('nlm_classification_number', sa.Unicode(), nullable=True),
    sa.Column('online_note', sa.UnicodeText(), nullable=True),
    sa.Column('public_mesh_note', sa.UnicodeText(), nullable=True),
    sa.Column('consider_also', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('descriptor_id', name=op.f('pk_descriptors')),
    sa.UniqueConstraint('ui', name=op.f('uq_descriptors_ui')),
    schema='mesh'
    )
    op.create_table('previous_indexings',
    sa.Column('previous_indexing_id', sa.BigInteger(), nullable=False),
    sa.Column('previous_indexing', sa.Unicode(), nullable=False),
    sa.Column('md5', sa.Binary(), nullable=False),
    sa.PrimaryKeyConstraint('previous_indexing_id', name=op.f('pk_previous_indexings')),
    schema='mesh'
    )
    op.create_index(op.f('ix_mesh_previous_indexings_md5'), 'previous_indexings', ['md5'], unique=True, schema='mesh')
    op.create_table('qualifiers',
    sa.Column('qualifier_id', sa.BigInteger(), nullable=False),
    sa.Column('ui', sa.Unicode(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.Column('created', sa.Date(), nullable=False),
    sa.Column('revised', sa.Date(), nullable=True),
    sa.Column('established', sa.Date(), nullable=True),
    sa.Column('annotation', sa.UnicodeText(), nullable=True),
    sa.Column('history_note', sa.UnicodeText(), nullable=True),
    sa.Column('online_note', sa.UnicodeText(), nullable=True),
    sa.PrimaryKeyConstraint('qualifier_id', name=op.f('pk_qualifiers')),
    sa.UniqueConstraint('ui', name=op.f('uq_qualifiers_ui')),
    schema='mesh'
    )
    op.create_table('sources',
    sa.Column('source_id', sa.BigInteger(), nullable=False),
    sa.Column('source', sa.Unicode(), nullable=False),
    sa.Column('md5', sa.Binary(), nullable=False),
    sa.PrimaryKeyConstraint('source_id', name=op.f('pk_sources')),
    schema='mesh'
    )
    op.create_index(op.f('ix_mesh_sources_md5'), 'sources', ['md5'], unique=True, schema='mesh')
    op.create_table('supplementals',
    sa.Column('supplemental_id', sa.BigInteger(), nullable=False),
    sa.Column('class', sa.Enum('ONE', 'TWO', 'THREE', 'FOUR', name='supplementalclasstype'), nullable=False),
    sa.Column('ui', sa.Unicode(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.Column('created', sa.Date(), nullable=False),
    sa.Column('revised', sa.Date(), nullable=True),
    sa.Column('note', sa.UnicodeText(), nullable=True),
    sa.Column('frequency', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('supplemental_id', name=op.f('pk_supplementals')),
    sa.UniqueConstraint('ui', name=op.f('uq_supplementals_ui')),
    schema='mesh'
    )
    op.create_table('terms',
    sa.Column('term_id', sa.BigInteger(), nullable=False),
    sa.Column('ui', sa.Unicode(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.Column('created', sa.Date(), nullable=True),
    sa.Column('abbreviation', sa.Unicode(), nullable=True),
    sa.Column('sort_version', sa.Unicode(), nullable=True),
    sa.Column('entry_version', sa.Unicode(), nullable=True),
    sa.Column('note', sa.UnicodeText(), nullable=True),
    sa.PrimaryKeyConstraint('term_id', name=op.f('pk_terms')),
    sa.UniqueConstraint('ui', name=op.f('uq_terms_ui')),
    schema='mesh'
    )
    op.create_table('thesaurus_ids',
    sa.Column('thesaurus_id_id', sa.BigInteger(), nullable=False),
    sa.Column('thesaurus_id', sa.Unicode(), nullable=False),
    sa.Column('md5', sa.Binary(), nullable=False),
    sa.PrimaryKeyConstraint('thesaurus_id_id', name=op.f('pk_thesaurus_ids')),
    schema='mesh'
    )
    op.create_index(op.f('ix_mesh_thesaurus_ids_md5'), 'thesaurus_ids', ['md5'], unique=True, schema='mesh')
    op.create_table('tree_numbers',
    sa.Column('tree_number_id', sa.BigInteger(), nullable=False),
    sa.Column('tree_number', sa.Unicode(), nullable=False),
    sa.Column('md5', sa.Binary(), nullable=False),
    sa.PrimaryKeyConstraint('tree_number_id', name=op.f('pk_tree_numbers')),
    schema='mesh'
    )
    op.create_index(op.f('ix_mesh_tree_numbers_md5'), 'tree_numbers', ['md5'], unique=True, schema='mesh')
    op.create_table('concept_related_concepts',
    sa.Column('concept_related_concept_id', sa.BigInteger(), nullable=False),
    sa.Column('concept_id', sa.BigInteger(), nullable=False),
    sa.Column('related_concept_id', sa.BigInteger(), nullable=False),
    sa.Column('relation_name', sa.Enum('NRW', 'BRD', 'REL', name='relationnametype'), nullable=False),
    sa.ForeignKeyConstraint(['concept_id'], ['mesh.concepts.concept_id'], name=op.f('fk_concept_related_concepts_concept_id_concepts')),
    sa.ForeignKeyConstraint(['related_concept_id'], ['mesh.concepts.concept_id'], name=op.f('fk_concept_related_concepts_related_concept_id_concepts')),
    sa.PrimaryKeyConstraint('concept_related_concept_id', name=op.f('pk_concept_related_concepts')),
    sa.UniqueConstraint('concept_id', 'related_concept_id', name=op.f('uq_concept_related_concepts_concept_id')),
    schema='mesh'
    )
    op.create_table('concept_terms',
    sa.Column('concept_term_id', sa.BigInteger(), nullable=False),
    sa.Column('concept_id', sa.BigInteger(), nullable=False),
    sa.Column('term_id', sa.BigInteger(), nullable=False),
    sa.Column('is_concept_preferred_term', sa.Boolean(), nullable=False),
    sa.Column('is_permuted_term', sa.Boolean(), nullable=False),
    sa.Column('lexical_tag', sa.Enum('ABB', 'ABX', 'ACR', 'ACX', 'EPO', 'LAB', 'NAM', 'NON', 'TRD', 'Frelex', name='lexicaltagtype'), nullable=False),
    sa.Column('is_record_preferred_term', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['concept_id'], ['mesh.concepts.concept_id'], name=op.f('fk_concept_terms_concept_id_concepts')),
    sa.ForeignKeyConstraint(['term_id'], ['mesh.terms.term_id'], name=op.f('fk_concept_terms_term_id_terms')),
    sa.PrimaryKeyConstraint('concept_term_id', name=op.f('pk_concept_terms')),
    sa.UniqueConstraint('concept_id', 'term_id', name=op.f('uq_concept_terms_concept_id')),
    schema='mesh'
    )
    op.create_table('descriptor_allowable_qualifiers',
    sa.Column('descriptor_allowable_qualifier_id', sa.BigInteger(), nullable=False),
    sa.Column('descriptor_id', sa.BigInteger(), nullable=False),
    sa.Column('qualifier_id', sa.BigInteger(), nullable=False),
    sa.Column('abbreviation', sa.Unicode(), nullable=False),
    sa.ForeignKeyConstraint(['descriptor_id'], ['mesh.descriptors.descriptor_id'], name=op.f('fk_descriptor_allowable_qualifiers_descriptor_id_descriptors')),
    sa.ForeignKeyConstraint(['qualifier_id'], ['mesh.qualifiers.qualifier_id'], name=op.f('fk_descriptor_allowable_qualifiers_qualifier_id_qualifiers')),
    sa.PrimaryKeyConstraint('descriptor_allowable_qualifier_id', name=op.f('pk_descriptor_allowable_qualifiers')),
    sa.UniqueConstraint('descriptor_id', 'qualifier_id', name=op.f('uq_descriptor_allowable_qualifiers_descriptor_id')),
    schema='mesh'
    )
    op.create_table('descriptor_concepts',
    sa.Column('descriptor_concept_id', sa.BigInteger(), nullable=False),
    sa.Column('descriptor_id', sa.BigInteger(), nullable=False),
    sa.Column('concept_id', sa.BigInteger(), nullable=False),
    sa.Column('is_preferred', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['concept_id'], ['mesh.concepts.concept_id'], name=op.f('fk_descriptor_concepts_concept_id_concepts')),
    sa.ForeignKeyConstraint(['descriptor_id'], ['mesh.descriptors.descriptor_id'], name=op.f('fk_descriptor_concepts_descriptor_id_descriptors')),
    sa.PrimaryKeyConstraint('descriptor_concept_id', name=op.f('pk_descriptor_concepts')),
    sa.UniqueConstraint('descriptor_id', 'concept_id', name=op.f('uq_descriptor_concepts_descriptor_id')),
    schema='mesh'
    )
    op.create_table('descriptor_pharmacological_action_descriptors',
    sa.Column('descriptor_pharmacological_action_descriptor_id', sa.BigInteger(), nullable=False),
    sa.Column('descriptor_id', sa.BigInteger(), nullable=False),
    sa.Column('pharmacological_action_descriptor_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['descriptor_id'], ['mesh.descriptors.descriptor_id'], name=op.f('fk_descriptor_pharmacological_action_descriptors_descriptor_id_descriptors')),
    sa.ForeignKeyConstraint(['pharmacological_action_descriptor_id'], ['mesh.descriptors.descriptor_id'], name=op.f('fk_descriptor_pharmacological_action_descriptors_pharmacological_action_descriptor_id_descriptors')),
    sa.PrimaryKeyConstraint('descriptor_pharmacological_action_descriptor_id', name=op.f('pk_descriptor_pharmacological_action_descriptors')),
    sa.UniqueConstraint('descriptor_id', 'pharmacological_action_descriptor_id', name=op.f('uq_descriptor_pharmacological_action_descriptors_descriptor_id')),
    schema='mesh'
    )
    op.create_table('descriptor_previous_indexings',
    sa.Column('descriptor_previous_indexing_id', sa.BigInteger(), nullable=False),
    sa.Column('descriptor_id', sa.BigInteger(), nullable=False),
    sa.Column('previous_indexing_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['descriptor_id'], ['mesh.descriptors.descriptor_id'], name=op.f('fk_descriptor_previous_indexings_descriptor_id_descriptors')),
    sa.ForeignKeyConstraint(['previous_indexing_id'], ['mesh.previous_indexings.previous_indexing_id'], name=op.f('fk_descriptor_previous_indexings_previous_indexing_id_previous_indexings')),
    sa.PrimaryKeyConstraint('descriptor_previous_indexing_id', name=op.f('pk_descriptor_previous_indexings')),
    sa.UniqueConstraint('descriptor_id', 'previous_indexing_id', name=op.f('uq_descriptor_previous_indexings_descriptor_id')),
    schema='mesh'
    )
    op.create_table('descriptor_related_descriptors',
    sa.Column('descriptor_related_descriptor_id', sa.BigInteger(), nullable=False),
    sa.Column('descriptor_id', sa.BigInteger(), nullable=False),
    sa.Column('related_descriptor_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['descriptor_id'], ['mesh.descriptors.descriptor_id'], name=op.f('fk_descriptor_related_descriptors_descriptor_id_descriptors')),
    sa.ForeignKeyConstraint(['related_descriptor_id'], ['mesh.descriptors.descriptor_id'], name=op.f('fk_descriptor_related_descriptors_related_descriptor_id_descriptors')),
    sa.PrimaryKeyConstraint('descriptor_related_descriptor_id', name=op.f('pk_descriptor_related_descriptors')),
    sa.UniqueConstraint('descriptor_id', 'related_descriptor_id', name=op.f('uq_descriptor_related_descriptors_descriptor_id')),
    schema='mesh'
    )
    op.create_table('descriptor_tree_numbers',
    sa.Column('descriptor_tree_number_id', sa.BigInteger(), nullable=False),
    sa.Column('descriptor_id', sa.BigInteger(), nullable=False),
    sa.Column('tree_number_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['descriptor_id'], ['mesh.descriptors.descriptor_id'], name=op.f('fk_descriptor_tree_numbers_descriptor_id_descriptors')),
    sa.ForeignKeyConstraint(['tree_number_id'], ['mesh.tree_numbers.tree_number_id'], name=op.f('fk_descriptor_tree_numbers_tree_number_id_tree_numbers')),
    sa.PrimaryKeyConstraint('descriptor_tree_number_id', name=op.f('pk_descriptor_tree_numbers')),
    sa.UniqueConstraint('descriptor_id', 'tree_number_id', name=op.f('uq_descriptor_tree_numbers_descriptor_id')),
    schema='mesh'
    )
    op.create_table('entry_combinations',
    sa.Column('entry_combination_id', sa.BigInteger(), nullable=False),
    sa.Column('descriptor_id', sa.BigInteger(), nullable=False),
    sa.Column('qualifier_id', sa.BigInteger(), nullable=True),
    sa.Column('type', sa.Enum('ECIN', 'ECOUT', name='entrycombinationtype'), nullable=True),
    sa.ForeignKeyConstraint(['descriptor_id'], ['mesh.descriptors.descriptor_id'], name=op.f('fk_entry_combinations_descriptor_id_descriptors')),
    sa.ForeignKeyConstraint(['qualifier_id'], ['mesh.qualifiers.qualifier_id'], name=op.f('fk_entry_combinations_qualifier_id_qualifiers')),
    sa.PrimaryKeyConstraint('entry_combination_id', name=op.f('pk_entry_combinations')),
    sa.UniqueConstraint('descriptor_id', 'qualifier_id', name=op.f('uq_entry_combinations_descriptor_id')),
    schema='mesh'
    )
    op.create_table('qualifier_concepts',
    sa.Column('qualifier_concept_id', sa.BigInteger(), nullable=False),
    sa.Column('qualifier_id', sa.BigInteger(), nullable=False),
    sa.Column('concept_id', sa.BigInteger(), nullable=False),
    sa.Column('is_preferred', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['concept_id'], ['mesh.concepts.concept_id'], name=op.f('fk_qualifier_concepts_concept_id_concepts')),
    sa.ForeignKeyConstraint(['qualifier_id'], ['mesh.qualifiers.qualifier_id'], name=op.f('fk_qualifier_concepts_qualifier_id_qualifiers')),
    sa.PrimaryKeyConstraint('qualifier_concept_id', name=op.f('pk_qualifier_concepts')),
    sa.UniqueConstraint('qualifier_id', 'concept_id', name=op.f('uq_qualifier_concepts_qualifier_id')),
    schema='mesh'
    )
    op.create_table('qualifier_tree_numbers',
    sa.Column('qualifier_tree_number_id', sa.BigInteger(), nullable=False),
    sa.Column('qualifier_id', sa.BigInteger(), nullable=False),
    sa.Column('tree_number_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['qualifier_id'], ['mesh.qualifiers.qualifier_id'], name=op.f('fk_qualifier_tree_numbers_qualifier_id_qualifiers')),
    sa.ForeignKeyConstraint(['tree_number_id'], ['mesh.tree_numbers.tree_number_id'], name=op.f('fk_qualifier_tree_numbers_tree_number_id_tree_numbers')),
    sa.PrimaryKeyConstraint('qualifier_tree_number_id', name=op.f('pk_qualifier_tree_numbers')),
    sa.UniqueConstraint('qualifier_id', 'tree_number_id', name=op.f('uq_qualifier_tree_numbers_qualifier_id')),
    schema='mesh'
    )
    op.create_table('supplemental_concepts',
    sa.Column('supplemental_concept_id', sa.BigInteger(), nullable=False),
    sa.Column('supplemental_id', sa.BigInteger(), nullable=False),
    sa.Column('concept_id', sa.BigInteger(), nullable=False),
    sa.Column('is_preferred', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['concept_id'], ['mesh.concepts.concept_id'], name=op.f('fk_supplemental_concepts_concept_id_concepts')),
    sa.ForeignKeyConstraint(['supplemental_id'], ['mesh.supplementals.supplemental_id'], name=op.f('fk_supplemental_concepts_supplemental_id_supplementals')),
    sa.PrimaryKeyConstraint('supplemental_concept_id', name=op.f('pk_supplemental_concepts')),
    sa.UniqueConstraint('supplemental_id', 'concept_id', name=op.f('uq_supplemental_concepts_supplemental_id')),
    schema='mesh'
    )
    op.create_table('supplemental_pharmacological_action_descriptors',
    sa.Column('supplemental_pharmacological_action_descriptor_id', sa.BigInteger(), nullable=False),
    sa.Column('supplemental_id', sa.BigInteger(), nullable=False),
    sa.Column('pharmacological_action_descriptor_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['pharmacological_action_descriptor_id'], ['mesh.descriptors.descriptor_id'], name=op.f('fk_supplemental_pharmacological_action_descriptors_pharmacological_action_descriptor_id_descriptors')),
    sa.ForeignKeyConstraint(['supplemental_id'], ['mesh.supplementals.supplemental_id'], name=op.f('fk_supplemental_pharmacological_action_descriptors_supplemental_id_supplementals')),
    sa.PrimaryKeyConstraint('supplemental_pharmacological_action_descriptor_id', name=op.f('pk_supplemental_pharmacological_action_descriptors')),
    sa.UniqueConstraint('supplemental_id', 'pharmacological_action_descriptor_id', name=op.f('uq_supplemental_pharmacological_action_descriptors_supplemental_id')),
    schema='mesh'
    )
    op.create_table('supplemental_previous_indexings',
    sa.Column('supplemental_previous_indexing_id', sa.BigInteger(), nullable=False),
    sa.Column('supplemental_id', sa.BigInteger(), nullable=False),
    sa.Column('previous_indexing_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['previous_indexing_id'], ['mesh.previous_indexings.previous_indexing_id'], name=op.f('fk_supplemental_previous_indexings_previous_indexing_id_previous_indexings')),
    sa.ForeignKeyConstraint(['supplemental_id'], ['mesh.supplementals.supplemental_id'], name=op.f('fk_supplemental_previous_indexings_supplemental_id_supplementals')),
    sa.PrimaryKeyConstraint('supplemental_previous_indexing_id', name=op.f('pk_supplemental_previous_indexings')),
    sa.UniqueConstraint('supplemental_id', 'previous_indexing_id', name=op.f('uq_supplemental_previous_indexings_supplemental_id')),
    schema='mesh'
    )
    op.create_table('supplemental_sources',
    sa.Column('supplemental_source_id', sa.BigInteger(), nullable=False),
    sa.Column('supplemental_id', sa.BigInteger(), nullable=False),
    sa.Column('source_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['source_id'], ['mesh.sources.source_id'], name=op.f('fk_supplemental_sources_source_id_sources')),
    sa.ForeignKeyConstraint(['supplemental_id'], ['mesh.supplementals.supplemental_id'], name=op.f('fk_supplemental_sources_supplemental_id_supplementals')),
    sa.PrimaryKeyConstraint('supplemental_source_id', name=op.f('pk_supplemental_sources')),
    sa.UniqueConstraint('supplemental_id', 'source_id', name=op.f('uq_supplemental_sources_supplemental_id')),
    schema='mesh'
    )
    op.create_table('term_thesaurus_ids',
    sa.Column('term_thesaurus_id_id', sa.BigInteger(), nullable=False),
    sa.Column('term_id', sa.BigInteger(), nullable=False),
    sa.Column('thesaurus_id_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['term_id'], ['mesh.terms.term_id'], name=op.f('fk_term_thesaurus_ids_term_id_terms')),
    sa.ForeignKeyConstraint(['thesaurus_id_id'], ['mesh.thesaurus_ids.thesaurus_id_id'], name=op.f('fk_term_thesaurus_ids_thesaurus_id_id_thesaurus_ids')),
    sa.PrimaryKeyConstraint('term_thesaurus_id_id', name=op.f('pk_term_thesaurus_ids')),
    sa.UniqueConstraint('term_id', 'thesaurus_id_id', name=op.f('uq_term_thesaurus_ids_term_id')),
    schema='mesh'
    )
    op.create_table('descriptor_entry_combinations',
    sa.Column('descriptor_entry_combination_id', sa.BigInteger(), nullable=False),
    sa.Column('descriptor_id', sa.BigInteger(), nullable=False),
    sa.Column('entry_combination_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['descriptor_id'], ['mesh.descriptors.descriptor_id'], name=op.f('fk_descriptor_entry_combinations_descriptor_id_descriptors')),
    sa.ForeignKeyConstraint(['entry_combination_id'], ['mesh.entry_combinations.entry_combination_id'], name=op.f('fk_descriptor_entry_combinations_entry_combination_id_entry_combinations')),
    sa.PrimaryKeyConstraint('descriptor_entry_combination_id', name=op.f('pk_descriptor_entry_combinations')),
    sa.UniqueConstraint('descriptor_id', 'entry_combination_id', name=op.f('uq_descriptor_entry_combinations_descriptor_id')),
    schema='mesh'
    )
    op.create_table('supplemental_heading_mapped_tos',
    sa.Column('supplemental_heading_mapped_to_id', sa.BigInteger(), nullable=False),
    sa.Column('supplemental_id', sa.BigInteger(), nullable=False),
    sa.Column('entry_combination_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['entry_combination_id'], ['mesh.entry_combinations.entry_combination_id'], name=op.f('fk_supplemental_heading_mapped_tos_entry_combination_id_entry_combinations')),
    sa.ForeignKeyConstraint(['supplemental_id'], ['mesh.supplementals.supplemental_id'], name=op.f('fk_supplemental_heading_mapped_tos_supplemental_id_supplementals')),
    sa.PrimaryKeyConstraint('supplemental_heading_mapped_to_id', name=op.f('pk_supplemental_heading_mapped_tos')),
    sa.UniqueConstraint('supplemental_id', 'entry_combination_id', name=op.f('uq_supplemental_heading_mapped_tos_supplemental_id')),
    schema='mesh'
    )
    op.create_table('supplemental_indexing_informations',
    sa.Column('supplemental_indexing_information_id', sa.BigInteger(), nullable=False),
    sa.Column('supplemental_id', sa.BigInteger(), nullable=False),
    sa.Column('entry_combination_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['entry_combination_id'], ['mesh.entry_combinations.entry_combination_id'], name=op.f('fk_supplemental_indexing_informations_entry_combination_id_entry_combinations')),
    sa.ForeignKeyConstraint(['supplemental_id'], ['mesh.supplementals.supplemental_id'], name=op.f('fk_supplemental_indexing_informations_supplemental_id_supplementals')),
    sa.PrimaryKeyConstraint('supplemental_indexing_information_id', name=op.f('pk_supplemental_indexing_informations')),
    sa.UniqueConstraint('supplemental_id', 'entry_combination_id', name=op.f('uq_supplemental_indexing_informations_supplemental_id')),
    schema='mesh'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('supplemental_indexing_informations', schema='mesh')
    op.drop_table('supplemental_heading_mapped_tos', schema='mesh')
    op.drop_table('descriptor_entry_combinations', schema='mesh')
    op.drop_table('term_thesaurus_ids', schema='mesh')
    op.drop_table('supplemental_sources', schema='mesh')
    op.drop_table('supplemental_previous_indexings', schema='mesh')
    op.drop_table('supplemental_pharmacological_action_descriptors', schema='mesh')
    op.drop_table('supplemental_concepts', schema='mesh')
    op.drop_table('qualifier_tree_numbers', schema='mesh')
    op.drop_table('qualifier_concepts', schema='mesh')
    op.drop_table('entry_combinations', schema='mesh')
    op.drop_table('descriptor_tree_numbers', schema='mesh')
    op.drop_table('descriptor_related_descriptors', schema='mesh')
    op.drop_table('descriptor_previous_indexings', schema='mesh')
    op.drop_table('descriptor_pharmacological_action_descriptors', schema='mesh')
    op.drop_table('descriptor_concepts', schema='mesh')
    op.drop_table('descriptor_allowable_qualifiers', schema='mesh')
    op.drop_table('concept_terms', schema='mesh')
    op.drop_table('concept_related_concepts', schema='mesh')
    op.drop_index(op.f('ix_mesh_tree_numbers_md5'), table_name='tree_numbers', schema='mesh')
    op.drop_table('tree_numbers', schema='mesh')
    op.drop_index(op.f('ix_mesh_thesaurus_ids_md5'), table_name='thesaurus_ids', schema='mesh')
    op.drop_table('thesaurus_ids', schema='mesh')
    op.drop_table('terms', schema='mesh')
    op.drop_table('supplementals', schema='mesh')
    op.drop_index(op.f('ix_mesh_sources_md5'), table_name='sources', schema='mesh')
    op.drop_table('sources', schema='mesh')
    op.drop_table('qualifiers', schema='mesh')
    op.drop_index(op.f('ix_mesh_previous_indexings_md5'), table_name='previous_indexings', schema='mesh')
    op.drop_table('previous_indexings', schema='mesh')
    op.drop_table('descriptors', schema='mesh')
    op.drop_index(op.f('ix_mesh_concepts_registry_number'), table_name='concepts', schema='mesh')
    op.drop_table('concepts', schema='mesh')
    # ### end Alembic commands ###
